FROM ubuntu:focal

# metadata
ARG TARGET=x86_64-unknown-linux-musl
ARG OPENSSL_ARCH=linux-x86_64
ARG MUSL_TARGET=x86_64-linux-musl

ENV RUST_MUSL_CROSS_TARGET=$TARGET \
    TARGET_HOST=$TARGET
ENV DEBIAN_FRONTEND=noninteractive
WORKDIR /builds

# install tools and dependencies
RUN set -eux; \
    apt update; \
    apt install -y --no-install-recommends \
    autoconf automake binutils ca-certificates cmake file gcc g++ git jq \
    libc6-dev libtool m4 make pkg-config curl libssl-dev zlib1g-dev mc;

# install musl

curl -L https://github.com/richfelker/musl-cross-make/archive/master.tar.gz | \
    tar --strip-components=1 -xz; \
    make install -j$(nproc) \
    GCC_VER=9.3.0 \
    MUSL_VER=1.2.0 \
    DL_CMD="curl -C - -L -o" \
    OUTPUT=/usr/local/ \
    "$@"
#RUN curl -sLO https://musl.cc/$MUSL_TARGET-cross.tgz&& \
#    tar xzf $MUSL_TARGET-cross.tgz&& \
#    cd $MUSL_TARGET-cross&& \
#    cp -fR * ../../usr/local/&& \
#    cd ..&& rm -rf $MUSL_TARGET-cross*


ENV CC=$TARGET-gcc \
    CXX=$TARGET-g++ \
    CC_x86_64_unknown_linux_musl=$TARGET-gcc \
    CXX_x86_64_unknown_linux_musl=$TARGET-g++\
    CARGO_TARGET_X86_64_UNKNOWN_LINUX_MUSL_LINKER=$TARGET-gcc \
    TARGET_CC=$TARGET-gcc\
    TARGET_CXX=$TARGET-g++\
    TARGET_AR=$TARGET-ar\
    TARGET_C_INCLUDE_PATH=/usr/local/$TARGET/include/\
    CXX_LIB_PATH_x86_64_unknown_linux_musl=/usr/local/$TARGET/lib/ \
    C_LIB_PATH_x86_64_unknown_linux_musl=/usr/local/$TARGET/lib/\
    CXXSTDLIB=stdc++ \
    TARGET_CXXSTDLIB=stdc++ \
    CXXSTDLIB_x86_64_unknown_linux_musl=stdc++ \
    LDFLAGS_x86_64_unknown_linux_musl=" -static -static-libstdc++ -static-libgcc -L/usr/local/lib -L/usr/local/$TARGET/lib" \
    LDFLAGS=" -static -static-libstdc++ -static-libgcc -L/usr/local/lib -L/usr/local/$TARGET/lib" \
    CFLAGS_x86_64_unknown_linux_musl=" -fPIC  -I/usr/local/include -I/usr/local/$TARGET/include" \
    CXXFLAGS_x86_64_unknown_linux_musl=" -fPIC  -I/usr/local/include -I/usr/local/$TARGET/include" \
    CFLAGS=" -fPIC  -I/usr/local/include -I/usr/local/$TARGET/include" \
    CXXFLAGS=" -fPIC  -I/usr/local/include -I/usr/local/$TARGET/include" \
    LD_LIBRARY_PATH=/usr/local/lib:/usr/local/$TARGET/lib:$LD_LIBRARY_PATH \
    PKG_CONFIG_ALLOW_CROSS=1 \
    PKG_CONFIG_ALL_STATIC=1 \
    OPENSSL_STATIC=1 \
    LIBZ_SYS_STATIC=1 \
    PATH=/usr/local/$TARGET/bin:$PATH

# ZLib & OpenSSL
RUN echo "Building zlib" && \
    VERS=1.2.11 && \
    curl -sLO https://zlib.net/zlib-$VERS.tar.gz && \
    tar xzf zlib-$VERS.tar.gz && cd zlib-$VERS && \
    $CC -v&&\
    CHOST=$TARGET CC=$TARGET_CC ./configure --static --prefix=/usr/local/$TARGET && \
    make && make install && \
    cd .. && rm -rf zlib-$VERS.tar.gz zlib-$VERS checksums.txt
RUN echo "Building OpenSSL" && \
    VERS=1.1.1d && \
    curl -sLO https://www.openssl.org/source/openssl-$VERS.tar.gz && \
    tar xzf openssl-$VERS.tar.gz && cd openssl-$VERS && \
    ./Configure $OPENSSL_ARCH no-async no-afalgeng no-shared --static --prefix=/usr/local/$TARGET && \
    make depend && \
    make && make install && \
    cd .. && rm -rf openssl-$VERS.tar.gz openssl-$VERS checksums.txt /usr/local/$TARGET/share

# download rustup
ADD "https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init" rustup-init

# rustup directory
ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH

RUN	chmod +x rustup-init; \
  ./rustup-init -y --no-modify-path --default-toolchain stable; \
  rm rustup-init; \
  chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \
  rustup install nightly; \
# install x86_64_unknown_linux_musl toolchain
	rustup target add $TARGET; \
	rustup target add $TARGET --toolchain nightly; \
  SCCACHE_LATEST_URL=`curl -sL    https://api.github.com/repos/mozilla/sccache/releases/latest | jq -r '.assets[2].browser_download_url'`; \
  curl -L $SCCACHE_LATEST_URL | tar zxf - --overwrite --strip-components=1 -C /usr/local/cargo/bin ; \
  rm -rf /usr/local/rustup/toolchains/*/share; \
# apt clean up
  apt autoremove -y; \
  apt clean; \
  rm -rf /var/lib/apt/lists/*;

COPY config/$TARGET.config /root/.cargo/config
ENV OPENSSL_DIR=/usr/local/$TARGET/ \
    OPENSSL_INCLUDE_DIR=/usr/local/$TARGET/include/ \
    DEP_OPENSSL_INCLUDE=/usr/local/$TARGET/include/ \
    OPENSSL_LIB_DIR=/usr/local/$TARGET/lib/

#Prepare sccache ENV
RUN mkdir $HOME/sccache
ENV RUST_BACKTRACE=full\
    RUSTC_WRAPPER=sccache \
    SCCACHE_DIR=$HOME/sccache \
    SCCACHE_CACHE_SIZE=1G
